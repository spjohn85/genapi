import os
import subprocess
import requests
from google.adk.agents import Agent
from google.adk.tools.tool_context import ToolContext
from config.settings import settings
from . import prompt

def create_github_repo(repo_name: str) -> str:
    """
    Creates a new repository on GitHub.
    """
    url = "https://api.github.com/orgs/genapis/repos"
    headers = {
        "Authorization": f"token {settings.GIT_TOKEN}",
        "Accept": "application/vnd.github.v3+json",
    }
    data = {
        "name": repo_name,
        "description": f"Sample repository created for {repo_name}",
        "private": False,
    }
    response = requests.post(url, headers=headers, json=data)
    if response.status_code == 201:
        return f"Repository '{repo_name}' created successfully."
    if response.status_code == 422:
        return f"Repository name '{repo_name}' already exists. Please choose a different name."
    else:
        return f"Failed to create repository: {response.content}"

def commit_and_push(repo_name: str, files: list[str], tool_context: ToolContext) -> str:
    """
    Commits and pushes files to a GitHub repository and returns the repository URL.
    """
    try:
        # Get username from token
        # user_info_url = "https://api.github.com/user"
        # headers = {"Authorization": f"token {settings.GITHUB_TOKEN}"}
        # response = requests.get(user_info_url, headers=headers)
        # if response.status_code != 200:
        #     return f"Failed to get username from token: {response.content}"
        # username = response.json()["login"]
        remote_url = f"https://{settings.GIT_TOKEN}@github.com/genapis/{repo_name}.git"
        userId=tool_context.state.get("user_id")
        subprocess.run(["git", "init"], check=True, cwd=userId)
        subprocess.run(["git", "branch", "-m", "main"], check=True, cwd=userId)
        subprocess.run(["git", "add", "."], check=True, cwd=userId)
        subprocess.run(["git", "config", "user.name", "apiprimer"], check=True, cwd=userId)
        subprocess.run(["git", "config", "user.email", "info@apiprimer.com"], check=True, cwd=userId)
        subprocess.run(["git", "commit", "-m", "generated by genapi"], check=True, cwd=userId)
        subprocess.run(["git", "branch", "-M", "main"], check=True, cwd=userId)
        subprocess.run(["git", "remote", "add", "origin", remote_url], check=True, cwd=userId)
        subprocess.run(["git", "push", "--set-upstream", "origin", "main"], check=True, cwd=userId)

        return f"Files committed and pushed to 'https://github.com/genapis/{repo_name}' successfully."
    except subprocess.CalledProcessError as e:
        return f"An error occurred during git command execution: {e.stdout} {e.stderr}"
    except Exception as e:
        return f"An unexpected error occurred: {e}"

api_committer_agent = Agent(
    name="api_committer",
    model=settings.DEFAULT_MODEL,
    description=prompt.DESCRIPTION,
    instruction=prompt.INSTRUCTION,
    tools=[
        create_github_repo,
        commit_and_push,
    ],
)
